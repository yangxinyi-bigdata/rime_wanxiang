# 反引号分隔符配置示例
# 在你的 Rime 输入法配置文件中添加以下配置

# 方式一：在主配置文件 (如 wanxiang_pro.schema.yaml) 中添加
translator:
  backtick_delimiter: ' '  # 空格分隔符 - 推荐设置
  # 其他 translator 配置...

# 方式二：在自定义配置文件中覆盖
# 创建或编辑 wanxiang_pro.custom.yaml 文件
patch:
  translator/backtick_delimiter: ' '  # 空格分隔符

# 不同分隔符的效果示例：

## 1. 空格分隔符 (推荐)
# backtick_delimiter: ' '
# 输入: nihk`hello`veuiufme
# 输出: 你好 hello 这是什么
# 效果: 反引号内容两边有空格，阅读友好

## 2. 反引号分隔符 (保持原样)
# backtick_delimiter: '`'
# 输入: nihk`hello`veuiufme  
# 输出: 你好`hello`这是什么
# 效果: 保持原有反引号，格式明确

## 3. 无分隔符 (默认)
# backtick_delimiter: ''
# 输入: nihk`hello`veuiufme
# 输出: 你好hello这是什么
# 效果: 直接连接，无额外符号

## 4. 自定义分隔符
# backtick_delimiter: '-'
# 输入: test`world`end
# 输出: 测试-world-结束
# 效果: 使用短横线分隔

## 5. 多字符分隔符
# backtick_delimiter: '[]'
# 输入: `content`
# 输出: []content[]
# 效果: 支持多字符分隔符

# 使用场景举例：
# 1. 编程代码混合输入：nihao`function`zaiijian → 你好 function 再见
# 2. 品牌名称保护：wo`iPhone`zhen → 我 iPhone 真
# 3. 专业术语保护：zhe`AI`henglilai → 这 AI 很厉害
# 4. 英文单词保护：jin`happy`ming → 今 happy 明

# 注意事项：
# 1. 配置修改后需要重新部署输入法
# 2. 分隔符会应用到所有反引号内容
# 3. 空字符串表示无分隔符（默认行为）
# 4. 支持任意字符串作为分隔符
# 5. 未配对的反引号也会应用分隔符规则
